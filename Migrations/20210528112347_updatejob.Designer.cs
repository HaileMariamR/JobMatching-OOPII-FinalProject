// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectContext.Data;

namespace JobMatching_OOPII_FinalProject.Migrations
{
    [DbContext(typeof(ProjectDatabaseContext))]
    [Migration("20210528112347_updatejob")]
    partial class updatejob
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.6");

            modelBuilder.Entity("Models.projectModels.EmployeeApplication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ComapanyName")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateofApplication")
                        .HasColumnType("TEXT");

                    b.Property<string>("EmployeeEmail")
                        .HasColumnType("TEXT");

                    b.Property<string>("Jobtitle")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("employeeApplications");
                });

            modelBuilder.Entity("Models.projectModels.Job", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CompanyName")
                        .HasColumnType("TEXT");

                    b.Property<string>("CompanyNameLogo")
                        .HasColumnType("TEXT");

                    b.Property<string>("JobDetail")
                        .HasColumnType("TEXT");

                    b.Property<string>("JobTitle")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("SalaryRange")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("dateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("jobType")
                        .HasColumnType("TEXT");

                    b.Property<string>("userEmail")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("jobs");
                });

            modelBuilder.Entity("Models.projectModels.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConfirmPassword")
                        .HasColumnType("TEXT");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("FullName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("users");

                    b.HasDiscriminator<string>("Discriminator").HasValue("User");
                });

            modelBuilder.Entity("Models.projectModels.Applicants", b =>
                {
                    b.HasBaseType("Models.projectModels.User");

                    b.Property<string>("JobPostion")
                        .HasColumnType("TEXT");

                    b.Property<string>("LinkedInLink")
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("Applicants");
                });

            modelBuilder.Entity("Models.projectModels.HiringManager", b =>
                {
                    b.HasBaseType("Models.projectModels.User");

                    b.HasDiscriminator().HasValue("HiringManager");
                });
#pragma warning restore 612, 618
        }
    }
}
